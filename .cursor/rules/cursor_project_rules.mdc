---
description: 
globs: 
alwaysApply: true
---
# Cursor Rule Creator

## Purpose
This rule provides guidance on creating and managing Cursor project rules, which serve as instructions for the AI assistant when working on any type of project, including technical, creative, business, and personal endeavors.

## Rule Creation Process

### 1. Define Rule Purpose
- Clearly articulate what the rule is intended to accomplish
- Identify the target project type or workflow (technical, creative, business, personal)
- Determine the scope and adaptability of the rule
- Consider how the rule may interact with external tools through MCP integration

### 2. Rule Structure
- **Title**: Clear, descriptive title
- **Purpose/Introduction**: Brief explanation of the rule's intent
- **Main Content**: Detailed guidance organized in logical sections
- **Implementation Instructions**: How to apply the rule in practice
- **Adaptability Guidelines**: How the rule can be modified for different contexts

### 3. Rule Development Workflow

#### If a new Cursor Rule is being created:

1. Create the rule initially as a markdown (`.md`) file in the `new_project_folder/.cursor/rules/` directory
2. Develop and refine the content
3. Once finalized, use the terminal to convert to a `.mdc` file
   ```bash
   # Example command to copy an .md file to .mdc format
   cp new_project_folder/.cursor/rules/your_rule.md new_project_folder/.cursor/rules/your_rule.mdc
   ```
4. Verify the content was correctly copied to the `.mdc` file
5. Delete the initial `.md` version of the file

#### If an existing Cursor Rule is being updated:

1. Use the terminal to copy to the existing `.mdc` file as an editable `.md` file
   ```bash
   # Example command to copy an .mdc file to .md format
   cp project_folder/.cursor/rules/your_rule.mdc project_folder/.cursor/rules/your_rule.md
   ```
2. Develop and refine the content of the new `.md` file
3. Delete the previous `.mdc` version of the file
4. Once finalized, use the terminal to convert to a `.mdc` file
   ```bash
   # Example command to copy an .md file to .mdc format
   cp project_folder/.cursor/rules/your_rule.md project_folder/.cursor/rules/your_rule.mdc
   ```
5. Verify the content was correctly copied to the `.mdc` file
6. Delete the `.md` version of the file

#### If an existing Cursor Rule is being re-used as-is in a new project setup:

1. Use the terminal to copy to the `.mdc` file to whichever location 
   ```bash
   # Example command to copy an .mdc file to a newly created project structure
   cp .cursor/rules/your_rule.mdc new_project_folder/.cursor/rules/your_rule.mdc
   ```

### 4. Rule Organization
- **IMPORTANT**: Place all rules directly in the `.cursor/rules/` directory without subdirectories
  ```
  .cursor/rules/
  ├── project_instruction_generator.mdc
  ├── cursor_rule_creator.mdc
  ├── web_app_development.mdc
  ├── mobile_app_development.mdc
  └── ...
  ```
- Use clear, descriptive filenames that indicate the rule's purpose
- Consider using prefixes for organization (e.g., `tech_`, `creative_`, `business_`, `personal_`)
- Include metadata tags within the rule content for searchability and categorization

### 5. Rule Maintenance
- Periodically review and update rules
- Document changes and improvements
- Consider versioning for significant changes
- Update for compatibility with new tools and APIs as they become available

## Best Practices

- Keep rules focused but adaptable to different contexts
- Use clear, concise language
- Include examples for different project types where helpful
- Structure content for easy scanning and reference
- Design rules with future extensibility in mind
- Consider both technical and non-technical applications
- Ensure rules support integration with external tools and services
- Remember that you cannot directly create or edit .mdc files - always create as .md first, then convert 