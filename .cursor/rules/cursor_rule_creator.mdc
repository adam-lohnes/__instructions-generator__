---
description: A rule for creating new Cursor Project Rules
globs: 
alwaysApply: false
---
# Cursor Rule Creator

## Purpose
This rule provides guidance on creating and managing Cursor project rules, which serve as instructions for the AI assistant when working on any type of project, including technical, creative, business, and personal endeavors.

## Rule Creation Process

### 1. Define Rule Purpose
- Clearly articulate what the rule is intended to accomplish
- Identify the target project type or workflow (technical, creative, business, personal)
- Determine the scope and adaptability of the rule
- Consider how the rule may interact with external tools through MCP integration

### 2. Rule Structure
- **Title**: Clear, descriptive title
- **Purpose/Introduction**: Brief explanation of the rule's intent
- **Main Content**: Detailed guidance organized in logical sections
- **Implementation Instructions**: How to apply the rule in practice
- **Adaptability Guidelines**: How the rule can be modified for different contexts

### 3. Rule Development Workflow
1. Create the rule initially as a markdown (`.md`) file
2. Develop and refine the content
3. Test the rule by reviewing its effectiveness across different project types
4. Once finalized, use the terminal to convert to a `.mdc` file and move it to the `.cursor/rules/` directory
   ```bash
   # Example command to copy a .md file to .mdc in the rules directory
   cp your_rule.md .cursor/rules/your_rule.mdc
   ```
5. Verify the content was correctly copied to the .mdc file

### 4. Rule Organization
- **IMPORTANT**: Place all rules directly in the `.cursor/rules/` directory without subdirectories
  ```
  .cursor/rules/
  ├── project_instruction_generator.mdc
  ├── cursor_rule_creator.mdc
  ├── web_app_development.mdc
  ├── mobile_app_development.mdc
  └── ...
  ```
- Use clear, descriptive filenames that indicate the rule's purpose
- Consider using prefixes for organization (e.g., `tech_`, `creative_`, `business_`, `personal_`)
- Include metadata tags within the rule content for searchability and categorization

### 5. Rule Maintenance
- Periodically review and update rules
- Document changes and improvements
- Consider versioning for significant changes
- Update for compatibility with new tools and APIs as they become available

## Implementation Steps

1. Draft the rule content in a standard markdown file in the workspace root
2. Review and refine the rule content for various use cases
3. Use the terminal to convert to `.mdc` format and move to the rules directory:
   ```bash
   cp your_rule.md .cursor/rules/your_rule.mdc
   ```
4. Document the new rule in a central index or readme file

## Best Practices

- Keep rules focused but adaptable to different contexts
- Use clear, concise language
- Include examples for different project types where helpful
- Structure content for easy scanning and reference
- Design rules with future extensibility in mind
- Consider both technical and non-technical applications
- Ensure rules support integration with external tools and services
- Remember that you cannot directly create or edit .mdc files - always create as .md first, then convert 