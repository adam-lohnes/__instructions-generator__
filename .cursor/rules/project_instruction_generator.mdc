---
description: 
globs: 
alwaysApply: true
---
# Project Instruction Generator

## Purpose
This template serves as a comprehensive guide for generating detailed project instructions for any type of project, whether technical, creative, business, or personal. It ensures a systematic approach to project planning, setup, and execution, adaptable to your specific needs.

## Project Instruction Template Structure

### 1. Project Overview
- **Project Name**: [Name]
- **Project Type**: Technical/Creative/Business/Personal
- **Project Description**: Detailed explanation of what the project aims to accomplish
- **Key Objectives**: Bullet points of main goals or features
- **Target Audience/Users**: Who will benefit from this project
- **Success Criteria**: What defines project completion/success

### 2. Initial Planning Phase
- **Resources Needed**: Technologies, tools, materials, or knowledge required
- **Conceptual Framework**: High-level design, structure, or approach
- **Dependencies**: External services, APIs, tools, or collaborators required
- **Research Required**: Areas needing investigation before proceeding

### 3. Project Plan & Knowledge Base
- **Project Phases**: Breakdown of project into logical phases
  - Phase 1: [Description with checklist format]
    - [ ] Task 1
    - [ ] Task 2
  - Phase 2: [Description with checklist format]
    - [ ] Task 1
    - [ ] Task 2
- **Priority Framework**: Identification of must-have vs. nice-to-have elements
- **Risk Assessment**: Potential challenges and mitigation strategies
- **Reference Materials**: Sources, inspirations, or guides to consult

### 4. Project Setup
- **Environment Setup**: Instructions for setting up necessary tools/workspace
- **Structure Organization**: Recommended project organization
  ```
  # For technical projects
  /project-root
  ├── /src
  ├── /docs
  ├── /tests
  └── ...
  
  # For creative projects
  /project-root
  ├── /drafts
  ├── /research
  ├── /assets
  └── ...
  
  # For business projects
  /project-root
  ├── /plans
  ├── /analysis
  ├── /resources
  └── ...
  ```
- **Version Control**: Tracking changes and managing iterations
- **Progress Journal**: Setup and structure for tracking progress

### 5. Workflow Management
- **Agent Workflow**:
  - Update documentation after completing each milestone
  - Track changes appropriately (version control for code, revision history for docs)
  - Create branches/variations for exploring alternatives
  - Update progress journal regularly
  - Adhere to project plan while remaining adaptable
  - Confirm date via terminal before journal updates
  - Request guidance for significant plan deviations
  - Leverage external tools and APIs as they become available through MCP integration

### 6. Quality Control
- **Review Process**: Approaches to evaluating progress and quality
- **Feedback Integration**: Methods for incorporating feedback
- **Testing/Validation**: Appropriate verification based on project type

### 7. Completion & Delivery
- **Finalization Process**: Steps for completing the project
- **Delivery Method**: How to share, publish, or implement the result
- **Maintenance Plan**: Ongoing support or updates if applicable

### 8. Documentation
- **Project Documentation**: Comprehensive record of the project
- **Process Documentation**: How the project was developed
- **User/Audience Documentation**: Guides for intended users/audience

## Implementation Instructions

When implementing this template for a specific project:

1. Start by asking clarifying questions about project requirements and scope
2. Establish project plan and knowledge base as a living document
3. Create a systematic structure based on project needs
4. Set up progress journal with dated entries for milestone tracking
5. Follow the agent workflow to ensure consistent progress and documentation
6. Adapt the template sections as needed for the specific project type
7. Integrate with external tools and services where beneficial
8. Remain flexible to accommodate evolving project needs

## Template Organization

Project templates should be organized in a structured way for easy access:

```
project_templates/
├── technical/
│   ├── web/
│   ├── mobile/
│   ├── api/
│   ├── data/
│   ├── game/
│   └── tool/
├── creative/
│   ├── writing/
│   ├── design/
│   └── media/
├── business/
│   ├── planning/
│   ├── marketing/
│   └── analytics/
└── personal/
    ├── life/
    ├── learning/
    └── productivity/
```